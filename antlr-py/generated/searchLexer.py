# Generated from /Users/eirikur/brownbags/antlr-py/search.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,7,98,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,
        3,1,3,1,3,1,3,1,3,1,4,1,4,5,4,53,8,4,10,4,12,4,56,9,4,1,5,3,5,59,
        8,5,1,5,1,5,1,5,3,5,64,8,5,1,6,3,6,67,8,6,1,6,1,6,1,6,1,6,1,6,3,
        6,74,8,6,1,7,1,7,1,7,1,7,5,7,80,8,7,10,7,12,7,83,9,7,1,7,1,7,1,8,
        4,8,88,8,8,11,8,12,8,89,1,9,4,9,93,8,9,11,9,12,9,94,1,9,1,9,0,0,
        10,1,1,3,2,5,3,7,4,9,0,11,0,13,0,15,5,17,6,19,7,1,0,8,1,0,49,57,
        1,0,48,57,1,0,48,50,1,0,49,50,1,0,48,49,1,0,34,34,8,0,33,33,35,38,
        40,41,48,57,64,90,95,95,97,122,128,65534,3,0,9,10,12,13,32,32,104,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,1,21,1,0,0,0,3,29,1,0,0,0,5,37,1,0,0,0,7,44,
        1,0,0,0,9,50,1,0,0,0,11,63,1,0,0,0,13,73,1,0,0,0,15,75,1,0,0,0,17,
        87,1,0,0,0,19,92,1,0,0,0,21,22,5,97,0,0,22,23,5,117,0,0,23,24,5,
        116,0,0,24,25,5,104,0,0,25,26,5,111,0,0,26,27,5,114,0,0,27,28,5,
        58,0,0,28,2,1,0,0,0,29,30,5,98,0,0,30,31,5,101,0,0,31,32,5,102,0,
        0,32,33,5,111,0,0,33,34,5,114,0,0,34,35,5,101,0,0,35,36,5,58,0,0,
        36,4,1,0,0,0,37,38,5,97,0,0,38,39,5,102,0,0,39,40,5,116,0,0,40,41,
        5,101,0,0,41,42,5,114,0,0,42,43,5,58,0,0,43,6,1,0,0,0,44,45,3,9,
        4,0,45,46,5,45,0,0,46,47,3,11,5,0,47,48,5,45,0,0,48,49,3,13,6,0,
        49,8,1,0,0,0,50,54,7,0,0,0,51,53,7,1,0,0,52,51,1,0,0,0,53,56,1,0,
        0,0,54,52,1,0,0,0,54,55,1,0,0,0,55,10,1,0,0,0,56,54,1,0,0,0,57,59,
        5,48,0,0,58,57,1,0,0,0,58,59,1,0,0,0,59,60,1,0,0,0,60,64,7,0,0,0,
        61,62,5,49,0,0,62,64,7,2,0,0,63,58,1,0,0,0,63,61,1,0,0,0,64,12,1,
        0,0,0,65,67,5,48,0,0,66,65,1,0,0,0,66,67,1,0,0,0,67,68,1,0,0,0,68,
        74,7,0,0,0,69,70,7,3,0,0,70,74,7,1,0,0,71,72,5,51,0,0,72,74,7,4,
        0,0,73,66,1,0,0,0,73,69,1,0,0,0,73,71,1,0,0,0,74,14,1,0,0,0,75,81,
        5,34,0,0,76,80,8,5,0,0,77,78,5,34,0,0,78,80,5,34,0,0,79,76,1,0,0,
        0,79,77,1,0,0,0,80,83,1,0,0,0,81,79,1,0,0,0,81,82,1,0,0,0,82,84,
        1,0,0,0,83,81,1,0,0,0,84,85,5,34,0,0,85,16,1,0,0,0,86,88,7,6,0,0,
        87,86,1,0,0,0,88,89,1,0,0,0,89,87,1,0,0,0,89,90,1,0,0,0,90,18,1,
        0,0,0,91,93,7,7,0,0,92,91,1,0,0,0,93,94,1,0,0,0,94,92,1,0,0,0,94,
        95,1,0,0,0,95,96,1,0,0,0,96,97,6,9,0,0,97,20,1,0,0,0,10,0,54,58,
        63,66,73,79,81,89,94,1,0,1,0
    ]

class searchLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    AUTHOR = 1
    BEFORE = 2
    AFTER = 3
    DATE = 4
    QUOTED_TERM = 5
    WORD = 6
    WS = 7

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'author:'", "'before:'", "'after:'" ]

    symbolicNames = [ "<INVALID>",
            "AUTHOR", "BEFORE", "AFTER", "DATE", "QUOTED_TERM", "WORD", 
            "WS" ]

    ruleNames = [ "AUTHOR", "BEFORE", "AFTER", "DATE", "YYYY", "MM", "DD", 
                  "QUOTED_TERM", "WORD", "WS" ]

    grammarFileName = "search.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


