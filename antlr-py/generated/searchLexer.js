// Generated from /Users/eirikur/Brownbags/antlr/search.g4 by ANTLR 4.9.2
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\td\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0003",
    "\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003",
    "\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0005\u0003\u0006\u0003",
    "\u0006\u0007\u00067\n\u0006\f\u0006\u000e\u0006:\u000b\u0006\u0003\u0007",
    "\u0005\u0007=\n\u0007\u0003\u0007\u0003\u0007\u0003\u0007\u0005\u0007",
    "B\n\u0007\u0003\b\u0005\bE\n\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003",
    "\b\u0005\bL\n\b\u0003\t\u0003\t\u0003\t\u0003\t\u0007\tR\n\t\f\t\u000e",
    "\tU\u000b\t\u0003\t\u0003\t\u0003\n\u0006\nZ\n\n\r\n\u000e\n[\u0003",
    "\u000b\u0006\u000b_\n\u000b\r\u000b\u000e\u000b`\u0003\u000b\u0003\u000b",
    "\u0002\u0002\f\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0002",
    "\r\u0002\u000f\u0002\u0011\u0007\u0013\b\u0015\t\u0003\u0002\n\u0003",
    "\u00023;\u0003\u00022;\u0003\u000224\u0003\u000234\u0003\u000223\u0003",
    "\u0002$$\n\u0002##%(*+2;B\\aac|\u0082\u0000\u0005\u0002\u000b\f\u000e",
    "\u000f\"\"\u0002j\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003",
    "\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003",
    "\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003",
    "\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0003\u0017\u0003",
    "\u0002\u0002\u0002\u0005\u001f\u0003\u0002\u0002\u0002\u0007\'\u0003",
    "\u0002\u0002\u0002\t.\u0003\u0002\u0002\u0002\u000b4\u0003\u0002\u0002",
    "\u0002\rA\u0003\u0002\u0002\u0002\u000fK\u0003\u0002\u0002\u0002\u0011",
    "M\u0003\u0002\u0002\u0002\u0013Y\u0003\u0002\u0002\u0002\u0015^\u0003",
    "\u0002\u0002\u0002\u0017\u0018\u0007c\u0002\u0002\u0018\u0019\u0007",
    "w\u0002\u0002\u0019\u001a\u0007v\u0002\u0002\u001a\u001b\u0007j\u0002",
    "\u0002\u001b\u001c\u0007q\u0002\u0002\u001c\u001d\u0007t\u0002\u0002",
    "\u001d\u001e\u0007<\u0002\u0002\u001e\u0004\u0003\u0002\u0002\u0002",
    "\u001f \u0007d\u0002\u0002 !\u0007g\u0002\u0002!\"\u0007h\u0002\u0002",
    "\"#\u0007q\u0002\u0002#$\u0007t\u0002\u0002$%\u0007g\u0002\u0002%&\u0007",
    "<\u0002\u0002&\u0006\u0003\u0002\u0002\u0002\'(\u0007c\u0002\u0002(",
    ")\u0007h\u0002\u0002)*\u0007v\u0002\u0002*+\u0007g\u0002\u0002+,\u0007",
    "t\u0002\u0002,-\u0007<\u0002\u0002-\b\u0003\u0002\u0002\u0002./\u0005",
    "\u000b\u0006\u0002/0\u0007/\u0002\u000201\u0005\r\u0007\u000212\u0007",
    "/\u0002\u000223\u0005\u000f\b\u00023\n\u0003\u0002\u0002\u000248\t\u0002",
    "\u0002\u000257\t\u0003\u0002\u000265\u0003\u0002\u0002\u00027:\u0003",
    "\u0002\u0002\u000286\u0003\u0002\u0002\u000289\u0003\u0002\u0002\u0002",
    "9\f\u0003\u0002\u0002\u0002:8\u0003\u0002\u0002\u0002;=\u00072\u0002",
    "\u0002<;\u0003\u0002\u0002\u0002<=\u0003\u0002\u0002\u0002=>\u0003\u0002",
    "\u0002\u0002>B\t\u0002\u0002\u0002?@\u00073\u0002\u0002@B\t\u0004\u0002",
    "\u0002A<\u0003\u0002\u0002\u0002A?\u0003\u0002\u0002\u0002B\u000e\u0003",
    "\u0002\u0002\u0002CE\u00072\u0002\u0002DC\u0003\u0002\u0002\u0002DE",
    "\u0003\u0002\u0002\u0002EF\u0003\u0002\u0002\u0002FL\t\u0002\u0002\u0002",
    "GH\t\u0005\u0002\u0002HL\t\u0003\u0002\u0002IJ\u00075\u0002\u0002JL",
    "\t\u0006\u0002\u0002KD\u0003\u0002\u0002\u0002KG\u0003\u0002\u0002\u0002",
    "KI\u0003\u0002\u0002\u0002L\u0010\u0003\u0002\u0002\u0002MS\u0007$\u0002",
    "\u0002NR\n\u0007\u0002\u0002OP\u0007$\u0002\u0002PR\u0007$\u0002\u0002",
    "QN\u0003\u0002\u0002\u0002QO\u0003\u0002\u0002\u0002RU\u0003\u0002\u0002",
    "\u0002SQ\u0003\u0002\u0002\u0002ST\u0003\u0002\u0002\u0002TV\u0003\u0002",
    "\u0002\u0002US\u0003\u0002\u0002\u0002VW\u0007$\u0002\u0002W\u0012\u0003",
    "\u0002\u0002\u0002XZ\t\b\u0002\u0002YX\u0003\u0002\u0002\u0002Z[\u0003",
    "\u0002\u0002\u0002[Y\u0003\u0002\u0002\u0002[\\\u0003\u0002\u0002\u0002",
    "\\\u0014\u0003\u0002\u0002\u0002]_\t\t\u0002\u0002^]\u0003\u0002\u0002",
    "\u0002_`\u0003\u0002\u0002\u0002`^\u0003\u0002\u0002\u0002`a\u0003\u0002",
    "\u0002\u0002ab\u0003\u0002\u0002\u0002bc\b\u000b\u0002\u0002c\u0016",
    "\u0003\u0002\u0002\u0002\f\u00028<ADKQS[`\u0003\u0002\u0003\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class searchLexer extends antlr4.Lexer {

    static grammarFileName = "search.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'author:'", "'before:'", "'after:'" ];
	static symbolicNames = [ null, "AUTHOR", "BEFORE", "AFTER", "DATE", "QUOTED_TERM", 
                          "WORD", "WS" ];
	static ruleNames = [ "AUTHOR", "BEFORE", "AFTER", "DATE", "YYYY", "MM", 
                      "DD", "QUOTED_TERM", "WORD", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

searchLexer.EOF = antlr4.Token.EOF;
searchLexer.AUTHOR = 1;
searchLexer.BEFORE = 2;
searchLexer.AFTER = 3;
searchLexer.DATE = 4;
searchLexer.QUOTED_TERM = 5;
searchLexer.WORD = 6;
searchLexer.WS = 7;



